<?xml version="1.0" encoding="utf-8"?>
<configuration>
  <configSections>
    <sectionGroup name="applicationSettings" type="System.Configuration.ApplicationSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" >
      <section name="Tao.LAS.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
      <section name="Tao.LAS.Settings.appSettings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
      <section name="WindowsFormsApplication1.Settings.appSettings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
      <section name="WindowsFormsApplication1.appSettings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" requirePermission="false" />
    </sectionGroup>
    <sectionGroup name="userSettings" type="System.Configuration.UserSettingsGroup, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" >
      <section name="Tao.LAS.Properties.Settings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" allowExeDefinition="MachineToLocalUser" requirePermission="false" />
      <section name="Tao.LAS.Settings.appSettings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" allowExeDefinition="MachineToLocalUser" requirePermission="false" />
      <section name="WindowsFormsApplication1.Settings.appSettings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" allowExeDefinition="MachineToLocalUser" requirePermission="false" />
      <section name="WindowsFormsApplication1.appSettings" type="System.Configuration.ClientSettingsSection, System, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" allowExeDefinition="MachineToLocalUser" requirePermission="false" />
    </sectionGroup>
  </configSections>
  <startup>
    <supportedRuntime version="v4.0" sku=".NETFramework,Version=v4.0" />
  </startup>
  <connectionStrings>
    <add name="Model1Container" connectionString="metadata=res://*/Model1.csdl|res://*/Model1.ssdl|res://*/Model1.msl;provider=System.Data.SqlServerCe.3.5;provider connection string=&quot;Data Source=|DataDirectory|\ActivityStats.sdf&quot;"
      providerName="System.Data.EntityClient" />
    <add name="ActivityStatsEntities" connectionString="metadata=res://*/Model1.csdl|res://*/Model1.ssdl|res://*/Model1.msl;provider=System.Data.SqlServerCe.3.5;provider connection string=&quot;Data Source=|DataDirectory|\ActivityStats.sdf&quot;"
      providerName="System.Data.EntityClient" />
    <add name="ActivityStatsEntities1" connectionString="metadata=res://*/Model1.csdl|res://*/Model1.ssdl|res://*/Model1.msl;provider=System.Data.SqlServerCe.3.5;provider connection string=&quot;Data Source=|DataDirectory|\ActivityStats.sdf&quot;"
      providerName="System.Data.EntityClient" />
    <add name="WindowsFormsApplication1.Properties.Settings.ActivityDBConnectionString"
      connectionString="Data Source=|DataDirectory|\ActivityDB.sdf"
      providerName="Microsoft.SqlServerCe.Client.3.5" />
    <add name="Tao.LAS.Properties.Settings.LASDBConnectionString"
      connectionString="Data Source=|DataDirectory|\ActivityDB.sdf;Max Database Size=4091;"
      providerName="Microsoft.SqlServerCe.Client.3.5" />
  </connectionStrings>
  <applicationSettings>
    <Tao.LAS.Properties.Settings>
      <setting name="sqlTopVotersQuery" serializeAs="String">
        <value>SELECT Username, COUNT(Action) AS [Total Votes] FROM UserActivity WHERE (Action = N'voted up') OR (Action = N'voted down') GROUP BY Username ORDER BY [Total Votes] DESC
</value>
      </setting>
      <setting name="sqlTopDownVotersQuery" serializeAs="String">
        <value>SELECT Username, COUNT(Username) AS [Total Votes] FROM UserActivity GROUP BY Action, Username HAVING (Action = N'voted down') ORDER BY [Total Votes] DESC</value>
      </setting>
      <setting name="sqlTopUpVotersQuery" serializeAs="String">
        <value>SELECT Username, COUNT(Username) AS [Total Votes] FROM UserActivity GROUP BY Action, Username HAVING (Action = N'voted up') ORDER BY [Total Votes] DESC</value>
      </setting>
      <setting name="sqlTopUpVoteRecipientsQuery" serializeAs="String">
        <value>SELECT        Target AS Username, COUNT(Target) AS [Total up votes] 
FROM            UserActivity 
WHERE        (Action = N'voted up') 
GROUP BY Target 
ORDER BY [Total up votes] DESC</value>
      </setting>
      <setting name="sqlTopDownVoteRecipientsQuery" serializeAs="String">
        <value>SELECT Target AS Username, COUNT(Target) AS [Total down votes] 
FROM   UserActivity 
WHERE  (Action = N'voted down') 
GROUP BY Target 
ORDER BY [Total down votes] DESC</value>
      </setting>
      <setting name="sqlTopUploadersQuery" serializeAs="String">
        <value>SELECT        Username, COUNT(Username) AS [Total Uploads] 
FROM            UserActivity 
WHERE        (Action = N'Uploaded content') 
GROUP BY Username 
ORDER BY [Total Uploads] DESC</value>
      </setting>
      <setting name="sqlTopCommentorsQuery" serializeAs="String">
        <value>SELECT        Username, COUNT(Username) AS [Total comments] 
FROM            UserActivity 
WHERE        (Action = N'Added comment') 
GROUP BY Username 
ORDER BY [Total Comments] DESC</value>
      </setting>
      <setting name="sqlCreateActivityTable" serializeAs="String">
        <value>CREATE TABLE UserActivity(Id int NOT NULL PRIMARY KEY IDENTITY,RawData nVarChar(2000) NULL,PageId nvarchar(6) NULL,Username nvarchar(100) NULL,Action nvarchar(100)NULL,Target nvarchar(1000) Null,TargetLink nvarchar(1000) NULL
)
</value>
      </setting>
      <setting name="sqlCheckTableExists" serializeAs="String">
        <value>SELECT COUNT(TABLE_NAME) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'TARGET_TABLE'</value>
      </setting>
      <setting name="strActivityUrl" serializeAs="String">
        <value>www.liveleak.com/recent_activity?a=browse&amp;ajax=1&amp;page=</value>
      </setting>
      <setting name="htmlStartPage" serializeAs="String">
        <value>&lt;h1&gt;&lt;span class="Title"&gt;LiveLeak Activity Spy&lt;/span&gt;&lt;/h1&gt;version 1.0
&lt;h3&gt;Usage instructions&lt;/h3&gt;
&lt;h1&gt; &lt;/h1&gt;
&lt;ol&gt;
    &lt;li&gt;Choose&amp;nbsp; a history depth. Use the slider or type in a number.&lt;/li&gt;
    &lt;li&gt;Click the Go button.&lt;/li&gt;
    &lt;li&gt;Wait for the application to retrieve all the data.&lt;/li&gt;
    &lt;li&gt;View stats or analyse the data.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Notes&lt;/h3&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;It's slow! can't you speed it up?&lt;/strong&gt;&lt;br /&gt;
    &lt;div align="justify"&gt;     It is slow by design. It is possible to make the applicaiton around 20 times faster by making it multi threaded. However, I love LiveLeak and if you do too, you wouldn't want to.&amp;nbsp; There's no need to hammer the hell out of LiveLeaks servers.&amp;nbsp; Currently the application downloads data at around the same speed that a user would browse the data.&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;'Acc' stands for Accuracy.&lt;/strong&gt;&lt;br /&gt;
    &lt;div align="justify"&gt;     Accuracy. Each error detected could well be 1 vote, or upload etc.&amp;nbsp; Since the overall results ommit the errors the 'Acc' value is an indicator that the sample data &lt;em&gt;may &lt;/em&gt;be around a certian percentage out, because of any errors detected during parsing and saving the data.&amp;nbsp; For the most part the data will be 100% accurate, therefore treat the 'Acc' figure as just an indicator.&lt;/div&gt;
    &lt;/li&gt;
&lt;/ul&gt;</value>
      </setting>
      <setting name="strLiveLeakUrl" serializeAs="String">
        <value>http://www.liveleak.com/</value>
      </setting>
      <setting name="sqlGetTotalRecordCount" serializeAs="String">
        <value>SELECT COUNT(*) FROM UserActivity</value>
      </setting>
      <setting name="sqlGetTotalErrorCount" serializeAs="String">
        <value>SELECT COUNT(*) FROM ErrorLog</value>
      </setting>
      <setting name="sqlGetMaxHistoryDepthRawData" serializeAs="String">
        <value>SELECT RawData, Id FROM UserActivity ORDER BY Id DESC</value>
      </setting>
      <setting name="sqlGetActivityByTarget" serializeAs="String">
        <value>SELECT Username, Action, Target, TargetLink FROM UserActivity Where Target = '[TARGET]'</value>
      </setting>
      <setting name="strNoMorePages" serializeAs="String">
        <value>&lt;body&gt;Sorry, no recent_activity items found!&lt;/body&gt;</value>
      </setting>
      <setting name="strDBFullPath" serializeAs="String">
        <value>|DataDirectory|\ActivityDB.sdf</value>
      </setting>
      <setting name="sqlRptVotedDown" serializeAs="String">
        <value>SELECT        Target, COUNT(Action) AS Count
FROM          UserActivity
GROUP BY Username, Action, Target
HAVING        (Action = N'[-ACTION-]') AND (Username = N'[-USER-]')
ORDER BY Count DESC</value>
      </setting>
      <setting name="sqlRptVotedUp" serializeAs="String">
        <value>SELECT        Target, COUNT(Action) AS Count
FROM          UserActivity
GROUP BY Username, Action, Target
HAVING        (Action = N'[-ACTION-]') AND (Username = N'[-USER-]')
ORDER BY Count DESC</value>
      </setting>
      <setting name="sqlRptUploads" serializeAs="String">
        <value>SELECT DISTINCT Target
FROM            UserActivity
GROUP BY Username, Action, Target
HAVING        (Action = N'[-ACTION-]') AND (Username = N'[-USER-]')</value>
      </setting>
      <setting name="sqlRptSubscribed" serializeAs="String">
        <value>SELECT DISTINCT Target
FROM            UserActivity
GROUP BY Username, Action, Target
HAVING        (Action = N'[-ACTION-]') AND (Username = N'[-USER-]')</value>
      </setting>
      <setting name="sqlRptUnSubscribed" serializeAs="String">
        <value>SELECT DISTINCT Target
FROM            UserActivity
GROUP BY Username, Action, Target
HAVING        (Action = N'[-ACTION-]') AND (Username = N'[-USER-]')</value>
      </setting>
      <setting name="sqlRptVotedOnItems" serializeAs="String">
        <value>SELECT DISTINCT Target
FROM            UserActivity
GROUP BY Username, Action, Target
HAVING        (Action = N'[-ACTION-]') AND (Username = N'[-USER-]')
ORDER BY Target</value>
      </setting>
      <setting name="sqlRptFavoured" serializeAs="String">
        <value>SELECT DISTINCT Target
FROM            UserActivity
GROUP BY Username, Action, Target
HAVING        (Action = N'[-ACTION-]') AND (Username = N'[-USER-]')
ORDER BY Target</value>
      </setting>
      <setting name="sqlRptComments" serializeAs="String">
        <value>SELECT        COUNT(Target) AS Count, Target, TargetLink
FROM            UserActivity
GROUP BY Username, Action, Target, TargetLink
HAVING        (Action = N'[-ACTION-]') AND (Username = N'[-USER-]')
ORDER BY Count DESC</value>
      </setting>
    </Tao.LAS.Properties.Settings>
    <Tao.LAS.Settings.appSettings>
      <setting name="sqlTopVotersQuery" serializeAs="String">
        <value>SELECT Username, COUNT(Action) AS [Total Votes] FROM UserActivity WHERE (Action = N'voted up') OR (Action = N'voted down') GROUP BY Username ORDER BY [Total Votes] DESC
</value>
      </setting>
      <setting name="sqlTopDownVotersQuery" serializeAs="String">
        <value>SELECT Username, COUNT(Username) AS [Total Votes] FROM UserActivity GROUP BY Action, Username HAVING (Action = N'voted down') ORDER BY [Total Votes] DESC</value>
      </setting>
      <setting name="sqlTopUpVotersQuery" serializeAs="String">
        <value>SELECT Username, COUNT(Username) AS [Total Votes] FROM UserActivity GROUP BY Action, Username HAVING (Action = N'voted up') ORDER BY [Total Votes] DESC</value>
      </setting>
      <setting name="sqlTopUpVoteRecipientsQuery" serializeAs="String">
        <value>SELECT        Target AS Username, COUNT(Target) AS [Total up votes] 
FROM            UserActivity 
WHERE        (Action = N'voted up') 
GROUP BY Target 
ORDER BY [Total up votes] DESC</value>
      </setting>
      <setting name="sqlTopDownVoteRecipientsQuery" serializeAs="String">
        <value>SELECT Target AS Username, COUNT(Target) AS [Total down votes] 
FROM   UserActivity 
WHERE  (Action = N'voted down') 
GROUP BY Target 
ORDER BY [Total down votes] DESC</value>
      </setting>
      <setting name="sqlTopUploadersQuery" serializeAs="String">
        <value>SELECT        Username, COUNT(Username) AS [Total Uploads] 
FROM            UserActivity 
WHERE        (Action = N'Uploaded content') 
GROUP BY Username 
ORDER BY [Total Uploads] DESC</value>
      </setting>
      <setting name="sqlTopCommentorsQuery" serializeAs="String">
        <value>SELECT        Username, COUNT(Username) AS [Total comments] 
FROM            UserActivity 
WHERE        (Action = N'Added comment') 
GROUP BY Username 
ORDER BY [Total Comments] DESC</value>
      </setting>
      <setting name="sqlCreateActivityTable" serializeAs="String">
        <value>CREATE TABLE UserActivity(Id int NOT NULL PRIMARY KEY IDENTITY,RawData nVarChar(2000) NULL,PageId nvarchar(6) NULL,Username nvarchar(100) NULL,Action nvarchar(100)NULL,Target nvarchar(1000) Null,TargetLink nvarchar(1000) NULL
)
</value>
      </setting>
      <setting name="sqlCheckTableExists" serializeAs="String">
        <value>SELECT COUNT(TABLE_NAME) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'TARGET_TABLE'</value>
      </setting>
      <setting name="strActivityUrl" serializeAs="String">
        <value>www.liveleak.com/recent_activity?a=browse&amp;ajax=1&amp;page=</value>
      </setting>
      <setting name="htmlStartPage" serializeAs="String">
        <value>&lt;h1&gt;&lt;span class="Title"&gt;LiveLeak Activity Spy&lt;/span&gt;&lt;/h1&gt;version 1.0
&lt;h3&gt;Usage instructions&lt;/h3&gt;
&lt;h1&gt; &lt;/h1&gt;
&lt;ol&gt;
    &lt;li&gt;Choose&amp;nbsp; a history depth. Use the slider or type in a number.&lt;/li&gt;
    &lt;li&gt;Click the Go button.&lt;/li&gt;
    &lt;li&gt;Wait for the application to retrieve all the data.&lt;/li&gt;
    &lt;li&gt;View stats or analyse the data.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Notes&lt;/h3&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;It's slow! can't you speed it up?&lt;/strong&gt;&lt;br /&gt;
    &lt;div align="justify"&gt;     It is slow by design. It is possible to make the applicaiton around 20 times faster by making it multi threaded. However, I love LiveLeak and if you do too, you wouldn't want to.&amp;nbsp; There's no need to hammer the hell out of LiveLeaks servers.&amp;nbsp; Currently the application downloads data at around the same speed that a user would browse the data.&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;'Acc' stands for Accuracy.&lt;/strong&gt;&lt;br /&gt;
    &lt;div align="justify"&gt;     Accuracy. Each error detected could well be 1 vote, or upload etc.&amp;nbsp; Since the overall results ommit the errors the 'Acc' value is an indicator that the sample data &lt;em&gt;may &lt;/em&gt;be around a certian percentage out.&amp;nbsp; For the most part the data will be 100% accurate, therefore treat the 'Acc' figure as just an indicator.&lt;/div&gt;
    &lt;/li&gt;
&lt;/ul&gt;</value>
      </setting>
      <setting name="dataSource" serializeAs="String">
        <value>c:\users\tom\documents\visual studio 2010\Projects\LAS\LAS\ActivityDB.sdf</value>
      </setting>
    </Tao.LAS.Settings.appSettings>
    <WindowsFormsApplication1.Settings.appSettings>
      <setting name="sqlTopVotersQuery" serializeAs="String">
        <value>SELECT Username, COUNT(Action) AS [Total Votes] FROM UserActivity WHERE (Action = N'voted up') OR (Action = N'voted down') GROUP BY Username ORDER BY [Total Votes] DESC
</value>
      </setting>
      <setting name="sqlTopDownVotersQuery" serializeAs="String">
        <value>SELECT Username, COUNT(Username) AS [Total Votes] FROM UserActivity GROUP BY Action, Username HAVING (Action = N'voted down') ORDER BY [Total Votes] DESC</value>
      </setting>
      <setting name="sqlTopUpVotersQuery" serializeAs="String">
        <value>SELECT Username, COUNT(Username) AS [Total Votes] FROM UserActivity GROUP BY Action, Username HAVING (Action = N'voted up') ORDER BY [Total Votes] DESC</value>
      </setting>
      <setting name="sqlTopUpVoteRecipientsQuery" serializeAs="String">
        <value>SELECT        Target AS Username, COUNT(Target) AS [Total up votes] 
FROM            UserActivity 
WHERE        (Action = N'voted up') 
GROUP BY Target 
ORDER BY [Total up votes] DESC</value>
      </setting>
      <setting name="sqlTopDownVoteRecipientsQuery" serializeAs="String">
        <value>SELECT Target AS Username, COUNT(Target) AS [Total down votes] 
FROM   UserActivity 
WHERE  (Action = N'voted down') 
GROUP BY Target 
ORDER BY [Total down votes] DESC</value>
      </setting>
      <setting name="sqlTopUploadersQuery" serializeAs="String">
        <value>SELECT        Username, COUNT(Username) AS [Total Uploads] 
FROM            UserActivity 
WHERE        (Action = N'Uploaded content') 
GROUP BY Username 
ORDER BY [Total Uploads] DESC</value>
      </setting>
      <setting name="sqlTopCommentorsQuery" serializeAs="String">
        <value>SELECT        Username, COUNT(Username) AS [Total comments] 
FROM            UserActivity 
WHERE        (Action = N'Added comment') 
GROUP BY Username 
ORDER BY [Total Comments] DESC</value>
      </setting>
      <setting name="sqlCreateActivityTable" serializeAs="String">
        <value>CREATE TABLE UserActivity(Id int NOT NULL PRIMARY KEY IDENTITY,RawData nVarChar(2000) NULL,PageId nvarchar(6) NULL,Username nvarchar(100) NULL,Action nvarchar(100)NULL,Target nvarchar(1000) Null,TargetLink nvarchar(1000) NULL
)
</value>
      </setting>
      <setting name="sqlCheckTableExists" serializeAs="String">
        <value>SELECT COUNT(TABLE_NAME) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'TARGET_TABLE'</value>
      </setting>
      <setting name="strActivityUrl" serializeAs="String">
        <value>www.liveleak.com/recent_activity?a=browse&amp;ajax=1&amp;page=</value>
      </setting>
      <setting name="htmlStartPage" serializeAs="String">
        <value>&lt;h1&gt;&lt;span class="Title"&gt;LiveLeak Activity Spy&lt;/span&gt;&lt;/h1&gt;version 1.0
&lt;h3&gt;Usage instructions&lt;/h3&gt;
&lt;h1&gt; &lt;/h1&gt;
&lt;ol&gt;
    &lt;li&gt;Choose&amp;nbsp; a history depth. Use the slider or type in a number.&lt;/li&gt;
    &lt;li&gt;Click the Go button.&lt;/li&gt;
    &lt;li&gt;Wait for the application to retrieve all the data.&lt;/li&gt;
    &lt;li&gt;View stats or analyse the data.&lt;/li&gt;
&lt;/ol&gt;
&lt;h3&gt;Notes&lt;/h3&gt;
&lt;ul&gt;
    &lt;li&gt;&lt;strong&gt;It's slow! can't you speed it up?&lt;/strong&gt;&lt;br /&gt;
    &lt;div align="justify"&gt;     It is slow by design. It is possible to make the applicaiton around 20 times faster by making it multi threaded. However, I love LiveLeak and if you do too, you wouldn't want to.&amp;nbsp; There's no need to hammer the hell out of LiveLeaks servers.&amp;nbsp; Currently the application downloads data at around the same speed that a user would browse the data.&lt;/div&gt;
    &lt;/li&gt;
    &lt;li&gt;&lt;strong&gt;'Acc' stands for Accuracy.&lt;/strong&gt;&lt;br /&gt;
    &lt;div align="justify"&gt;     Accuracy. Each error detected could well be 1 vote, or upload etc.&amp;nbsp; Since the overall results ommit the errors the 'Acc' value is an indicator that the sample data &lt;em&gt;may &lt;/em&gt;be around a certian percentage out.&amp;nbsp; For the most part the data will be 100% accurate, therefore treat the 'Acc' figure as just an indicator.&lt;/div&gt;
    &lt;/li&gt;
&lt;/ul&gt;</value>
      </setting>
      <setting name="dataSource" serializeAs="String">
        <value>c:\users\tom\documents\visual studio 2010\Projects\WindowsFormsApplication1\WindowsFormsApplication1\ActivityDB.sdf</value>
      </setting>
    </WindowsFormsApplication1.Settings.appSettings>
    <WindowsFormsApplication1.appSettings>
      <setting name="sqlTopVotersQuery" serializeAs="String">
        <value>SELECT Username, COUNT(Action) AS [Total Votes] FROM UserActivity WHERE (Action = N'voted up') OR (Action = N'voted down') GROUP BY Username ORDER BY [Total Votes] DESC
</value>
      </setting>
      <setting name="sqlTopDownVotersQuery" serializeAs="String">
        <value>SELECT Username, COUNT(Username) AS [Total Votes] FROM UserActivity GROUP BY Action, Username HAVING (Action = N'voted down') ORDER BY [Total Votes] DESC</value>
      </setting>
      <setting name="sqlTopUpVotersQuery" serializeAs="String">
        <value>SELECT Username, COUNT(Username) AS [Total Votes] FROM UserActivity GROUP BY Action, Username HAVING (Action = N'voted up') ORDER BY [Total Votes] DESC</value>
      </setting>
      <setting name="sqlTopUpVoteRecipientsQuery" serializeAs="String">
        <value>SELECT        Target AS Username, COUNT(Target) AS [Total up votes] 
FROM            UserActivity 
WHERE        (Action = N'voted up') 
GROUP BY Target 
ORDER BY [Total up votes] DESC</value>
      </setting>
      <setting name="sqlTopDownVoteRecipientsQuery" serializeAs="String">
        <value>SELECT Target AS Username, COUNT(Target) AS [Total down votes] 
FROM   UserActivity 
WHERE  (Action = N'voted down') 
GROUP BY Target 
ORDER BY [Total down votes] DESC</value>
      </setting>
      <setting name="sqlTopUploadersQuery" serializeAs="String">
        <value>SELECT        Username, COUNT(Username) AS [Total Uploads] 
FROM            UserActivity 
WHERE        (Action = N'Uploaded content') 
GROUP BY Username 
ORDER BY [Total Uploads] DESC</value>
      </setting>
      <setting name="sqlTopCommentorsQuery" serializeAs="String">
        <value>SELECT        Username, COUNT(Username) AS [Total comments] 
FROM            UserActivity 
WHERE        (Action = N'Added comment') 
GROUP BY Username 
ORDER BY [Total Comments] DESC</value>
      </setting>
      <setting name="sqlCreateActivityTable" serializeAs="String">
        <value>CREATE TABLE UserActivity(Id int NOT NULL PRIMARY KEY IDENTITY,RawData nVarChar(2000) NULL,PageId nvarchar(6) NULL,Username nvarchar(100) NULL,Action nvarchar(100)NULL,Target nvarchar(1000) Null,TargetLink nvarchar(1000) NULL
)
</value>
      </setting>
      <setting name="sqlCheckTableExists" serializeAs="String">
        <value>SELECT COUNT(TABLE_NAME) FROM INFORMATION_SCHEMA.TABLES WHERE TABLE_NAME = 'TARGET_TABLE'</value>
      </setting>
    </WindowsFormsApplication1.appSettings>
  </applicationSettings>
  <userSettings>
    <Tao.LAS.Properties.Settings>
      <setting name="sqlCreateErrorLogTable" serializeAs="String">
        <value>CREATE TABLE ErrorLog ( Id int NOT NULL PRIMARY KEY IDENTITY, Time datetime NULL, Message ntext NULL )</value>
      </setting>
      <setting name="strLiveLeakUserUrl" serializeAs="String">
        <value>http://www.liveleak.com/c/</value>
      </setting>
    </Tao.LAS.Properties.Settings>
    <Tao.LAS.Settings.appSettings>
      <setting name="sqlCreateErrorLogTable" serializeAs="String">
        <value>CREATE TABLE ErrorLog ( Id int NOT NULL PRIMARY KEY IDENTITY, Time datetime NULL, Message ntext NULL )</value>
      </setting>
    </Tao.LAS.Settings.appSettings>
    <WindowsFormsApplication1.Settings.appSettings>
      <setting name="sqlCreateErrorLogTable" serializeAs="String">
        <value>CREATE TABLE ErrorLog ( Id int NOT NULL PRIMARY KEY IDENTITY, Time datetime NULL, Message ntext NULL )</value>
      </setting>
    </WindowsFormsApplication1.Settings.appSettings>
    <WindowsFormsApplication1.appSettings>
      <setting name="sqlCreateErrorLogTable" serializeAs="String">
        <value>CREATE TABLE ErrorLog ( Id int NOT NULL PRIMARY KEY IDENTITY, Time datetime NULL, Message ntext NULL )</value>
      </setting>
    </WindowsFormsApplication1.appSettings>
  </userSettings>
</configuration>